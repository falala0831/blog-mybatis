<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bigbone.blog.dao.BlogDao">
    <!--新增保存文章-->
    <insert id="saveBlog" parameterType="com.bigbone.blog.entity.Blog">
        insert into myblog.t_blog (id,title, content, first_picture, flag,
        views, appreciation, share_statement, commentabled, published,
        recommend, create_time, update_time, type_id, user_id, description)
        values (#{id},#{title},#{content},#{firstPicture},#{flag},#{views},#{appreciation},
        #{shareStatement},#{commentabled},#{published},#{recommend},#{createTime},
        #{updateTime},#{typeId},#{userId},#{description});
    </insert>

    <!--查询文章管理列表多对一配置-->
    <resultMap id="blog" type="com.bigbone.blog.entity.BlogQuery">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="updateTime" column="update_time"/>
        <result property="recommend" column="recommend"/>
        <result property="published" column="published"/>
        <result property="typeId" column="type_id"/>
        <association property="type" javaType="com.bigbone.blog.entity.Type">
            <id property="id" column="id"/>
            <result property="name" column="name"/>
        </association>
    </resultMap>
    <!--查询文章管理列表-->
    <select id="getAllBlogQuery" resultMap="blog">
        select b.id,b.title,b.update_time,b.recommend,b.published,b.type_id,t.id,t.name
        from myblog.t_blog b left outer join
        blog.t_type t on b.type_id = t.id order by b.update_time desc
    </select>

    <!--删除文章-->
    <delete id="deleteBlog">
        delete from myblog.t_blog where id = #{id}
    </delete>

    <!--根据id查询文章-->
    <select id="getBlogById" resultType="com.bigbone.blog.entity.Blog">
        select b.id,b.flag,b.title,b.content,b.type_id,
        b.first_picture,b.description,b.recommend,b.published,b.share_statement,
        b.appreciation,b.commentabled from myblog.t_blog b  where  b.id = #{id};
    </select>

    <!--编辑修改文章-->
    <update id="updateBlog" parameterType="com.bigbone.blog.entity.Blog">
        update myblog.t_blog set published = #{published},flag = #{flag} ,
        title = #{title}, content = #{content}, type_id = #{typeId},
        first_picture = #{firstPicture} , description = #{description} , recommend = #{recommend} ,
        share_statement = #{shareStatement}, appreciation = #{appreciation},
        commentabled = #{commentabled} ,update_time = #{updateTime} where id = #{id};
    </update>

    <!--搜索博客管理列表-->
    <select id="searchBlog" parameterType="com.bigbone.blog.entity.BlogQuery" resultMap="blog">
        <bind name="pattern" value="'%' + title + '%'" />
        select b.id,b.title,b.update_time,b.recommend,b.published,b.type_id,t.id,t.name
        from myblog.t_blog b ,myblog.t_type t
        <where>
            <if test="1 == 1">
                b.type_id = t.id
            </if>
            <if test="typeId != null">
                and b.type_id = #{typeId}
            </if>
            <if test="title != null">
                and b.title like #{pattern}
            </if>
            <if test="recommend">
                and b.recommend = true
            </if>
            <if test="draft">
                and b.published = false
            </if>
        </where>
        order by b.update_time desc
    </select>

    <resultMap id="blogMap" type="com.bigbone.blog.entity.Blog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="appreciation" column="appreciation"/>
        <result property="commentabled" column="commentabled"/>
        <result property="content" column="content"/>
        <result property="createTime" column="create_time"/>
        <result property="description" column="description"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="flag" column="flag"/>
        <result property="updateTime" column="update_time"/>
        <result property="recommend" column="recommend"/>
        <result property="published" column="published"/>
        <result property="typeId" column="type_id"/>
        <result property="userId" column="user_id"/>
        <result property="shareStatement" column="share_statement"/>
        <result property="views" column="views"/>
        <association property="type" javaType="com.bigbone.blog.entity.Type">
            <id property="id" column="id"/>
            <result property="name" column="name"/>
        </association>
        <association property="user" javaType="com.bigbone.blog.entity.User">
            <id property="id" column="id"/>
            <result property="avatar" column="avatar"/>
            <result property="createTime" column="create_time"/>
            <result property="nickname" column="nickname"/>
            <result property="username" column="username"/>
        </association>
    </resultMap>

    <!--查询首页最新博客列表信息-->
    <select id="getFirstPageBlog" resultMap="blogMap">
        select b.id,b.title,b.first_picture, b.views, b.create_time,b.update_time,b.description,
        t.name, u.nickname, u.avatar
        from myblog.t_blog b, myblog.t_type t,myblog.t_user u
        where b.type_id = t.id and  u.id = b.user_id and b.published = true
        order by b.create_time desc
    </select>

    <!--查询推荐文章-->
    <select id="getRecommendBlog" resultType="com.bigbone.blog.entity.Blog">
        select * from myblog.t_blog where t_blog.recommend = true and t_blog.published = true
        order by t_blog.create_time desc limit 5;
    </select>

    <!--搜索文章-->
    <select id="getSearchBlog" resultMap="blogMap">
        <bind name="pattern" value="'%' + query + '%'" />
        select b.id,b.title,b.first_picture, b.views,b.update_time,b.description,
        t.name ,u.nickname, u.avatar
        from myblog.t_blog b, myblog.t_type t,myblog.t_user u
        where b.type_id = t.id and  u.id = b.user_id and b.published = true and (b.title like #{pattern} or b.content like  #{pattern})
        order by b.update_time desc
    </select>

    <!--博客详情查询-->
    <select id="getDetailedBlog" resultMap="blogMap">
        select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name
        from myblog.t_blog b,myblog.t_user u, myblog.t_type t
        where b.user_id = u.id and b.type_id = t.id and b.id = #{id}
    </select>

    <!--文章访问自增-->
    <update id="updateViews" parameterType="com.bigbone.blog.entity.Blog">
        update myblog.t_blog b set b.views = b.views+1 where b.id = #{id}
    </update>


    <!--分类页面查询-->
    <select id="getByTypeId" resultMap="blogMap">
        select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description,
        t.name ,u.nickname, u.avatar
        from myblog.t_blog b, myblog.t_type t,myblog.t_user u
        where b.type_id = t.id and u.id = b.user_id and b.type_id = #{typeId} order by b.update_time desc
    </select>

    <!--计算博客总数-->
    <select id="countBlog" resultType="java.lang.Long">
        select count(b.id) from myblog.t_blog b where b.published=true
    </select>

    <!--获取所有博客年份-->
    <select id="findGroupYear" resultType="String">
        select DATE_FORMAT(b.update_time,'%Y') as year
        from myblog.t_blog b
        group by year
        order by year desc
    </select>

    <!--按照年份查询博客-->
    <select id="findByYear" resultMap="blogMap" parameterType="string">
        select b.id, b.title, b.flag, b.update_Time
        from myblog.t_blog b
        where DATE_FORMAT(b.update_time,'%Y') = #{year} and b.published = true
    </select>
</mapper>